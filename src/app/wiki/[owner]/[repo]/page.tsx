import { Metadata } from 'next';
import { notFound } from 'next/navigation';
import Link from 'next/link';
import { Book, GitBranch, Eye, Calendar } from 'lucide-react';
import { createCaller } from '@/lib/trpc/server';

interface WikiIndexProps {
  params: Promise<{
    owner: string;
    repo: string;
  }>;
  searchParams: Promise<{
    version?: string;
  }>;
}

// Generate metadata for SEO
export async function generateMetadata({ params }: WikiIndexProps): Promise<Metadata> {
  const { owner, repo } = await params;

  const title = `${owner}/${repo} Documentation Wiki`;
  const description = `Comprehensive documentation and API reference for ${owner}/${repo}, auto-generated by gh.gg`;

  return {
    title,
    description,
    keywords: [owner, repo, 'documentation', 'wiki', 'API reference', 'developer docs'],
    openGraph: {
      title,
      description,
      type: 'website',
      url: `https://github.gg/wiki/${owner}/${repo}`,
      siteName: 'gh.gg',
    },
    twitter: {
      card: 'summary_large_image',
      title,
      description,
    },
    robots: {
      index: true,
      follow: true,
    },
  };
}

export default async function WikiIndex({ params, searchParams }: WikiIndexProps) {
  const { owner, repo } = await params;
  const { version } = await searchParams;

  const caller = await createCaller();
  const toc = await caller.wiki.getWikiTableOfContents({
    owner,
    repo,
    version: version ? parseInt(version) : undefined,
  });

  if (!toc || toc.pages.length === 0) {
    return (
      <div className="min-h-screen bg-background">
        <div className="container mx-auto px-4 py-16">
          <div className="max-w-2xl mx-auto text-center">
            <Book className="h-16 w-16 mx-auto mb-4 text-muted-foreground" />
            <h1 className="text-3xl font-bold mb-4">No Wiki Documentation</h1>
            <p className="text-muted-foreground mb-8">
              This repository doesn&apos;t have wiki documentation yet.
            </p>
            <Link
              href={`/${owner}/${repo}`}
              className="inline-flex items-center gap-2 px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors"
            >
              <GitBranch className="h-4 w-4" />
              View Repository
            </Link>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background">
      {/* Header */}
      <header className="border-b bg-card/50 backdrop-blur-sm">
        <div className="container mx-auto px-4 py-8">
          <div className="flex items-center gap-3 mb-4">
            <Book className="h-8 w-8 text-primary" />
            <div>
              <h1 className="text-3xl font-bold">{owner}/{repo}</h1>
              <p className="text-muted-foreground">Documentation Wiki</p>
            </div>
          </div>
          <div className="flex items-center gap-4 text-sm text-muted-foreground">
            <Link
              href={`/${owner}/${repo}`}
              className="flex items-center gap-1 hover:text-foreground transition-colors"
            >
              <GitBranch className="h-4 w-4" />
              View Repository
            </Link>
            <span>â€¢</span>
            <span>Version {toc.version}</span>
            <span>â€¢</span>
            <span>{toc.pages.length} pages</span>
          </div>
        </div>
      </header>

      {/* Table of Contents Grid */}
      <div className="container mx-auto px-4 py-12">
        <div className="max-w-5xl mx-auto">
          <h2 className="text-2xl font-bold mb-8">ðŸ“š Contents</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {toc.pages.map((page) => (
              <Link
                key={page.slug}
                href={`/wiki/${owner}/${repo}/${page.slug}${version ? `?version=${version}` : ''}`}
                className="group block p-6 rounded-lg border bg-card hover:border-primary transition-all hover:shadow-md"
              >
                <div className="flex items-start justify-between mb-2">
                  <h3 className="text-lg font-semibold group-hover:text-primary transition-colors">
                    {page.title}
                  </h3>
                  <span className="text-2xl opacity-50 group-hover:opacity-100 transition-opacity">
                    â†’
                  </span>
                </div>
                {page.summary && (
                  <p className="text-sm text-muted-foreground line-clamp-2 mb-3">
                    {page.summary}
                  </p>
                )}
                <div className="flex items-center gap-4 text-xs text-muted-foreground">
                  <div className="flex items-center gap-1">
                    <Eye className="h-3 w-3" />
                    {page.viewCount} views
                  </div>
                  {page.updatedAt && (
                    <div className="flex items-center gap-1">
                      <Calendar className="h-3 w-3" />
                      {new Date(page.updatedAt).toLocaleDateString()}
                    </div>
                  )}
                </div>
              </Link>
            ))}
          </div>
        </div>
      </div>

      {/* Footer */}
      <footer className="border-t mt-12 py-8">
        <div className="container mx-auto px-4 text-center text-sm text-muted-foreground">
          <p>
            Documentation auto-generated by{' '}
            <Link href="/" className="font-medium hover:underline">
              gh.gg
            </Link>
            {' '}&mdash; {' '}
            <Link
              href={`https://github.com/${owner}/${repo}`}
              target="_blank"
              rel="noopener noreferrer"
              className="hover:underline"
            >
              View repository on GitHub â†’
            </Link>
          </p>
        </div>
      </footer>
    </div>
  );
}
