import { Metadata } from 'next';
import { notFound, redirect } from 'next/navigation';
import Link from 'next/link';
import { Book, GitBranch, Eye, Calendar } from 'lucide-react';
import { createCaller } from '@/lib/trpc/server';

interface WikiIndexProps {
  params: Promise<{
    owner: string;
    repo: string;
  }>;
  searchParams: Promise<{
    version?: string;
  }>;
}

// Generate metadata for SEO
export async function generateMetadata({ params }: WikiIndexProps): Promise<Metadata> {
  const { owner, repo } = await params;

  const title = `${owner}/${repo} Documentation Wiki`;
  const description = `Comprehensive documentation and API reference for ${owner}/${repo}, auto-generated by gh.gg`;

  return {
    title,
    description,
    keywords: [owner, repo, 'documentation', 'wiki', 'API reference', 'developer docs'],
    openGraph: {
      title,
      description,
      type: 'website',
      url: `https://github.gg/wiki/${owner}/${repo}`,
      siteName: 'gh.gg',
    },
    twitter: {
      card: 'summary_large_image',
      title,
      description,
    },
    robots: {
      index: true,
      follow: true,
    },
  };
}

export default async function WikiIndex({ params, searchParams }: WikiIndexProps) {
  const { owner, repo } = await params;
  const { version } = await searchParams;

  const caller = await createCaller();
  const toc = await caller.wiki.getWikiTableOfContents({
    owner,
    repo,
    version: version ? parseInt(version) : undefined,
  });

  if (!toc || toc.pages.length === 0) {
    return (
      <div className="min-h-screen bg-background">
        <div className="container mx-auto px-4 py-16">
          <div className="max-w-2xl mx-auto text-center">
            <Book className="h-16 w-16 mx-auto mb-4 text-muted-foreground" />
            <h1 className="text-3xl font-bold mb-4">No Wiki Documentation</h1>
            <p className="text-muted-foreground mb-8">
              This repository doesn&apos;t have wiki documentation yet.
            </p>
            <Link
              href={`/${owner}/${repo}`}
              className="inline-flex items-center gap-2 px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors"
            >
              <GitBranch className="h-4 w-4" />
              View Repository
            </Link>
          </div>
        </div>
      </div>
    );
  }

  // Redirect to the first page (typically "getting-started" or "overview")
  const firstPage = toc.pages[0];
  const redirectUrl = `/wiki/${owner}/${repo}/${firstPage.slug}${version ? `?version=${version}` : ''}`;

  redirect(redirectUrl);
}
